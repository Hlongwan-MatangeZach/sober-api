// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoberPath_API.Context;

#nullable disable

namespace SoberPath_API.Migrations
{
    [DbContext(typeof(Sober_Context))]
    [Migration("20250719174748_sober1")]
    partial class sober1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SoberPath_API.Models.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Addiction_level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("FilePaths")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Social_WorkerId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Substance_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("Social_WorkerId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("SoberPath_API.Models.Client_Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Assignment_Date")
                        .HasColumnType("date");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("NGO_AdminId")
                        .HasColumnType("int");

                    b.Property<int?>("Social_WorkerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("NGO_AdminId");

                    b.HasIndex("Social_WorkerId");

                    b.ToTable("ClientAssignments");
                });

            modelBuilder.Entity("SoberPath_API.Models.Next_of_Kin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Next_Of_Kins");
                });

            modelBuilder.Entity("SoberPath_API.Models.Recieved_Applications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Processing_Date")
                        .HasColumnType("date");

                    b.Property<int?>("Rehab_AdminId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("Rehab_AdminId");

                    b.ToTable("Recieved_Applications");
                });

            modelBuilder.Entity("SoberPath_API.Models.Rehab_Admission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Admission_Date")
                        .HasColumnType("date");

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Dischange_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("Discharged_Date")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("Expected_Dischanrge")
                        .HasColumnType("date");

                    b.Property<bool?>("IsDischarged")
                        .HasColumnType("bit");

                    b.Property<int?>("Rehab_AdminId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("Rehab_AdminId");

                    b.ToTable("Rehab_Admissions");
                });

            modelBuilder.Entity("SoberPath_API.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("Session_Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Social_WorkerId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("Social_WorkerId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("SoberPath_API.Models.SessionBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Assignment_Date")
                        .HasColumnType("date");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("NGO_AdminId")
                        .HasColumnType("int");

                    b.Property<int?>("Social_WorkerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("NGO_AdminId");

                    b.ToTable("SessionBookings");
                });

            modelBuilder.Entity("SoberPath_API.Models.Social_Worker_Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Availabillity_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Social_WorkerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Social_WorkerId");

                    b.ToTable("Social_Worker_Schedules");
                });

            modelBuilder.Entity("SoberPath_API.Models.Substance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Substances");
                });

            modelBuilder.Entity("SoberPath_API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Race")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SoberPath_API.Models.Client", b =>
                {
                    b.HasBaseType("SoberPath_API.Models.User");

                    b.Property<int?>("Social_WorkerId")
                        .HasColumnType("int");

                    b.HasIndex("Social_WorkerId");

                    b.HasDiscriminator().HasValue("Client");
                });

            modelBuilder.Entity("SoberPath_API.Models.NGO_Admin", b =>
                {
                    b.HasBaseType("SoberPath_API.Models.User");

                    b.HasDiscriminator().HasValue("NGO_Admin");
                });

            modelBuilder.Entity("SoberPath_API.Models.Rehab_Admin", b =>
                {
                    b.HasBaseType("SoberPath_API.Models.User");

                    b.HasDiscriminator().HasValue("Rehab_Admin");
                });

            modelBuilder.Entity("SoberPath_API.Models.Social_Worker", b =>
                {
                    b.HasBaseType("SoberPath_API.Models.User");

                    b.HasDiscriminator().HasValue("Social_Worker");
                });

            modelBuilder.Entity("SoberPath_API.Models.Application", b =>
                {
                    b.HasOne("SoberPath_API.Models.Client", null)
                        .WithMany("Application")
                        .HasForeignKey("ClientId");

                    b.HasOne("SoberPath_API.Models.Social_Worker", null)
                        .WithMany("Applications")
                        .HasForeignKey("Social_WorkerId");
                });

            modelBuilder.Entity("SoberPath_API.Models.Client_Assignment", b =>
                {
                    b.HasOne("SoberPath_API.Models.Client", null)
                        .WithMany("Client_Assignment")
                        .HasForeignKey("ClientId");

                    b.HasOne("SoberPath_API.Models.NGO_Admin", null)
                        .WithMany("Client_Assignments")
                        .HasForeignKey("NGO_AdminId");

                    b.HasOne("SoberPath_API.Models.Social_Worker", null)
                        .WithMany("Client_Assignments")
                        .HasForeignKey("Social_WorkerId");
                });

            modelBuilder.Entity("SoberPath_API.Models.Next_of_Kin", b =>
                {
                    b.HasOne("SoberPath_API.Models.Client", null)
                        .WithMany("Next_Of_Kins")
                        .HasForeignKey("ClientId");
                });

            modelBuilder.Entity("SoberPath_API.Models.Recieved_Applications", b =>
                {
                    b.HasOne("SoberPath_API.Models.Application", null)
                        .WithMany("Recieved_Applications")
                        .HasForeignKey("ApplicationId");

                    b.HasOne("SoberPath_API.Models.Rehab_Admin", null)
                        .WithMany("Recieved_Applications")
                        .HasForeignKey("Rehab_AdminId");
                });

            modelBuilder.Entity("SoberPath_API.Models.Rehab_Admission", b =>
                {
                    b.HasOne("SoberPath_API.Models.Client", null)
                        .WithMany("Rehab_Admission")
                        .HasForeignKey("ClientId");

                    b.HasOne("SoberPath_API.Models.Rehab_Admin", null)
                        .WithMany("Rehab_Admissions")
                        .HasForeignKey("Rehab_AdminId");
                });

            modelBuilder.Entity("SoberPath_API.Models.Session", b =>
                {
                    b.HasOne("SoberPath_API.Models.Client", null)
                        .WithMany("Sessions")
                        .HasForeignKey("ClientId");

                    b.HasOne("SoberPath_API.Models.Social_Worker", null)
                        .WithMany("Sessions")
                        .HasForeignKey("Social_WorkerId");
                });

            modelBuilder.Entity("SoberPath_API.Models.SessionBooking", b =>
                {
                    b.HasOne("SoberPath_API.Models.Client", null)
                        .WithMany("SessionBooking")
                        .HasForeignKey("ClientId");

                    b.HasOne("SoberPath_API.Models.NGO_Admin", null)
                        .WithMany("SessionBookings")
                        .HasForeignKey("NGO_AdminId");
                });

            modelBuilder.Entity("SoberPath_API.Models.Social_Worker_Schedule", b =>
                {
                    b.HasOne("SoberPath_API.Models.Social_Worker", null)
                        .WithMany("Social_Worker_Schedules")
                        .HasForeignKey("Social_WorkerId");
                });

            modelBuilder.Entity("SoberPath_API.Models.Substance", b =>
                {
                    b.HasOne("SoberPath_API.Models.Client", null)
                        .WithMany("Substances")
                        .HasForeignKey("ClientId");
                });

            modelBuilder.Entity("SoberPath_API.Models.Client", b =>
                {
                    b.HasOne("SoberPath_API.Models.Social_Worker", null)
                        .WithMany("Clients")
                        .HasForeignKey("Social_WorkerId");
                });

            modelBuilder.Entity("SoberPath_API.Models.Application", b =>
                {
                    b.Navigation("Recieved_Applications");
                });

            modelBuilder.Entity("SoberPath_API.Models.Client", b =>
                {
                    b.Navigation("Application");

                    b.Navigation("Client_Assignment");

                    b.Navigation("Next_Of_Kins");

                    b.Navigation("Rehab_Admission");

                    b.Navigation("SessionBooking");

                    b.Navigation("Sessions");

                    b.Navigation("Substances");
                });

            modelBuilder.Entity("SoberPath_API.Models.NGO_Admin", b =>
                {
                    b.Navigation("Client_Assignments");

                    b.Navigation("SessionBookings");
                });

            modelBuilder.Entity("SoberPath_API.Models.Rehab_Admin", b =>
                {
                    b.Navigation("Recieved_Applications");

                    b.Navigation("Rehab_Admissions");
                });

            modelBuilder.Entity("SoberPath_API.Models.Social_Worker", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Client_Assignments");

                    b.Navigation("Clients");

                    b.Navigation("Sessions");

                    b.Navigation("Social_Worker_Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
